# modifiers
set $mod Mod4
floating_modifier $mod


# solarized colors reference
set $(S_base03)   002b36
set $(S_base02)   073642
set $(S_base01)   586e75
set $(S_base00)   657b83
set $(S_base0)    839496
set $(S_base1)    93a1a1
set $(S_base2)    eee8d5
set $(S_base3)    fdf6e3
set $(S_yellow)   b58900
set $(S_orange)   cb4b16
set $(S_red)      dc322f
set $(S_magenta)  d33682
set $(S_violet)   6c71c4
set $(S_blue)     268bd2
set $(S_cyan)     2aa198
set $(S_green)    859900

# TODO use a templating engine to make this work
# because i3 does not support recursive variables
#set $lock i3lock -c $(S_base03)
set $lock i3lock -c 002b36


# starting programs
bindsym $mod+Return exec urxvt
bindsym $mod+d exec --no-startup-id "dmenu_run -nb \#$(S_base03) -nf \#$(S_base01) -sb \#$(S_base02) -sf \#$(S_violet) -fn -*-terminus-bold-*-*-*-20-*-*-*-*-*-*-*"
#bindsym $mod+m exec "cmus-remote -u"
# toggle mpd playback
bindsym $mod+Down exec --no-startup-id "mpc toggle"
#bindsym $mod+l exec "notify-send DUNST_COMMAND_PAUSE; i3lock -c 002b36; notify-send DUNST_COMMAND_RESUME"
#bindsym $mod+l exec "$lock"
bindsym $mod+Shift+k kill
bindsym $mod+b exec --no-startup-id /home/cal/bin/background.sh


# volume
bindsym XF86AudioRaiseVolume exec --no-startup-id "amixer set Master 5%+; killall -SIGUSR1 i3status"
bindsym XF86AudioLowerVolume exec --no-startup-id "amixer set Master 5%-; killall -SIGUSR1 i3status"
bindsym XF86AudioMute exec --no-startup-id "amixer set Master toggle; killall -SIGUSR1 i3status"
bindsym XF86MonBrightnessUp exec --no-startup-id "xbacklight -inc 5"
bindsym XF86MonBrightnessDown exec --no-startup-id "xbacklight -dec 5"


# restarting and quitting i3
bindsym $mod+Shift+j reload
bindsym $mod+r restart
#bindsym $mod+Shift+q exec "i3-nagbar -t warning -m 'exit i3?' -b 'Yes, exit i3' 'i3-msg exit'"


# layouts
# TODO deduplicate this dmenu stuff
bindsym $mod+a exec --no-startup-id "quickswitch.py --dmenu 'dmenu -i -l 20 -nb \#$(S_base03) -nf \#$(S_base01) -sb \#$(S_base02) -sf \#$(S_violet) -fn -*-terminus-bold-*-*-*-20-*-*-*-*-*-*-*'"
bindsym $mod+Shift+a exec --no-startup-id "quickswitch.py --empty"
bindsym $mod+w exec --no-startup-id "quickswitch.py --degap"
bindsym $mod+Shift+u exec --no-startup-id "~/src/python/quickswitch-for-i3/quickswitch.py --urgent"
bindsym $mod+backslash split h
bindsym $mod+minus split v
bindsym $mod+f fullscreen
bindsym $mod+o layout stacking
bindsym $mod+e layout tabbed
bindsym $mod+u layout toggle split

bindsym $mod+Shift+space floating toggle
bindsym $mod+space focus mode_toggle

bindsym $mod+p focus parent
bindsym $mod+c focus child

bindsym $mod+h focus left
bindsym $mod+t focus down
bindsym $mod+n focus up
bindsym $mod+s focus right

bindsym $mod+Shift+h move left
bindsym $mod+Shift+t move down
bindsym $mod+Shift+n move up
bindsym $mod+Shift+s move right

bindsym $mod+Left workspace prev
bindsym $mod+Right workspace next
#bindsym $mod+Down focus down
#bindsym $mod+Up focus up

bindsym $mod+Shift+Left move container to workspace prev
bindsym $mod+Shift+Right move container to workspace next
#bindsym $mod+Shift+Down move down
#bindsym $mod+Shift+Up move up

bindsym $mod+Tab workspace back_and_forth
bindsym $mod+Shift+Tab move container to workspace back_and_forth

bindcode $mod+10 workspace 1
bindcode $mod+11 workspace 2
bindcode $mod+12 workspace 3
bindcode $mod+13 workspace 4
bindcode $mod+14 workspace 5
bindcode $mod+15 workspace 6
bindcode $mod+16 workspace 7
bindcode $mod+17 workspace 8
bindcode $mod+18 workspace 9
bindcode $mod+19 workspace 10

bindcode $mod+Shift+10 move container to workspace 1
bindcode $mod+Shift+11 move container to workspace 2
bindcode $mod+Shift+12 move container to workspace 3
bindcode $mod+Shift+13 move container to workspace 4
bindcode $mod+Shift+14 move container to workspace 5
bindcode $mod+Shift+15 move container to workspace 6
bindcode $mod+Shift+16 move container to workspace 7
bindcode $mod+Shift+17 move container to workspace 8
bindcode $mod+Shift+18 move container to workspace 9
bindcode $mod+Shift+19 move container to workspace 10

mode "resize" {
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym t resize grow height 10 px or 10 ppt
        bindsym n resize shrink height 10 px or 10 ppt
        bindsym s resize grow width 10 px or 10 ppt

        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+Shift+r mode "resize"


# exit mode
set $quit_msg c:ancel l:ock e:xit r:estart s:hutdown d:isk m:emory h:ybrid

mode "$quit_msg" {
    bindsym c mode "default"
    bindsym l exec "i3-msg mode 'default' && $lock"
    bindsym e exit
    bindsym r exec systemctl reboot
    bindsym s exec systemctl poweroff
    bindsym d exec "i3-msg mode 'default' && $lock && systemctl hibernate"
    bindsym m exec "i3-msg mode 'default' && $lock && systemctl suspend"
    bindsym h exec "i3-msg mode 'default' && $lock && systemctl hybrid-sleep"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Shift+q mode "$quit_msg"

# appearance

font -*-terminus-bold-*-*-*-20-*-*-*-*-*-*-*
# class                 border       background   text         indicator
client.focused          #$(S_base01) #$(S_base02) #$(S_violet) #$(S_base01)
client.focused_inactive #$(S_base02) #$(S_base03) #$(S_base0)  #$(S_base02)
client.unfocused        #$(S_base02) #$(S_base03) #$(S_base01) #$(S_base01)
client.urgent           #$(S_base02) #$(S_red)    #$(S_base2)  #$(S_red)
client.background       #$(S_base03)

# status bar
bar {
    status_command i3status
    colors {
        background #$(S_base03)
        statusline #$(S_base00)
        separator  #$(S_base01)

        #                  border       background   text
        focused_workspace  #$(S_base01) #$(S_base02) #$(S_violet)
        # for multi-monitor
        active_workspace   #$(S_base01) #$(S_base00) #$(S_base2)
        inactive_workspace #$(S_base02) #$(S_base03) #$(S_base01)
        urgent_workspace   #$(S_base02) #$(S_red)    #$(S_base2)

    }
}
